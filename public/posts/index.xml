<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on AlecStrong</title>
    <link>https://alecstrong.com/posts/</link>
    <description>Recent content in Posts on AlecStrong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 13 Feb 2020 13:15:17 -0500</lastBuildDate>

	<atom:link href="https://alecstrong.com/posts/index.xml" rel="self" type="application/rss+xml" />


    <item>
      <title>Supporting Multiple Dialects in SQLDelight</title>
      <link>https://alecstrong.com/2020/02/multiple-dialects/</link>
      <pubDate>Thu, 13 Feb 2020 13:15:17 -0500</pubDate>

      <guid>https://alecstrong.com/2020/02/multiple-dialects/</guid>
      <description>With SQLDelight 1.3.0 and above we now support multiple dialects of SQL (at time of writing: SQLite 3.18, SQLite 3.24, and MySQL). They&#39;re not complete implementations of any of those dialects but they support necessary features and the real meat of the release is a straightforward framework for adding parts of the dialects incrementally. For example SQLite 3.24 is just SQLite 3.18 with upsert on top (thank you Angus Holder!).</description>
    </item>

    <item>
      <title>Integrating Github Actions for Kotlin Multiplatform</title>
      <link>https://alecstrong.com/2020/01/github-actions-mpp/</link>
      <pubDate>Thu, 23 Jan 2020 20:57:46 -0500</pubDate>

      <guid>https://alecstrong.com/2020/01/github-actions-mpp/</guid>
      <description>With Kotlin Multiplatform (KMP) it&#39;s possible to build artifacts for multiple platforms using the same toolchain, but until portable artifacts for KMP are released you need to build platform artifacts on their respective platforms.
With SqlDelight 1.2.2 we now also deploy Windows (mingW) artifacts, meaning it&#39;s impossible to publish from a single OS (since we also support macOS targets). There was no simple setup with Travis and Github Actions is the new hot stuff so we gave that a go and here&#39;s how it works:</description>
    </item>

  </channel>
</rss>
